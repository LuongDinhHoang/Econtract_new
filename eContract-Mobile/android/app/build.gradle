def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    //throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "flavor_branch"

    productFlavors {
        dev {
            dimension "flavor_branch"
            applicationId "com.bkav.econtract.dev"
            resValue "string", "app_name", "Bkav eContract Dev"
            versionCode 41
            versionName "1.1.7"
        }
        product {
            dimension "flavor_branch"
            applicationId "com.bkav.econtract"
            resValue "string", "app_name", "Bkav eContract"
            versionCode 41
            versionName "1.1.7"
        }
        demo {
            dimension "flavor_branch"
            applicationId "com.bkav.econtract"
            resValue "string", "app_name", "Bkav eContract Demo"
            versionCode 41
            versionName "1.1.7"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

     signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    defaultConfig {
        applicationId "com.bkav.econtract"
        minSdkVersion 24
        targetSdkVersion 31
        multiDexEnabled true
        versionCode 1
        versionName "1.0.0"

    }

    buildTypes {
        release {

            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            multiDexEnabled true
        }
        debug {
            multiDexEnabled true
        }
    }
    buildToolsVersion '30.0.2'
    buildFeatures{
        dataBinding true
        viewBinding true
    }

}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation platform('com.google.firebase:firebase-bom:30.3.1')
    implementation 'com.google.firebase:firebase-analytics:21.1.0'
    implementation 'com.google.firebase:firebase-messaging:23.0.6'
    implementation files('src/main/java/com/bkav/econtract/ekyc/bkavekyc.aar')

    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation ('com.squareup.retrofit2:retrofit:2.1.0') {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.10'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.makeramen:roundedimageview:2.3.0'

    def camerax_version = "1.2.0"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.3.+'

}

flutter {
    source '../..'
}
